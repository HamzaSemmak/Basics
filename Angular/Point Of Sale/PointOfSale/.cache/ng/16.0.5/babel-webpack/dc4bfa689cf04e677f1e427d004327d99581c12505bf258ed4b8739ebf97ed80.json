{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.service.Check()) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/login']).then(() => {\n        window.location.reload();\n      });\n      this.t;\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","service","router","canActivate","route","state","Check","navigate","then","window","location","reload","t","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Guards\\Auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from 'src/app/Services/Auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private service: AuthService, private router: Router) { \r\n  }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(this.service.Check())\r\n      {\r\n        return true;\r\n      }\r\n      else {\r\n        this.router.navigate(['/auth/login']).then(() => {\r\n          window.location.reload();\r\n        });\r\n        this.t\r\n        return false;\r\n      }\r\n    }\r\n}"],"mappings":";;;AAKA,MAIaA,SAAS;EAEpBC,YAAoBC,OAAoB,EAAUC,MAAc;IAA5C,KAAAD,OAAO,GAAPA,OAAO;IAAuB,KAAAC,MAAM,GAANA,MAAM;EACxD;EAEAC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAG,IAAI,CAACJ,OAAO,CAACK,KAAK,EAAE,EACvB;MACE,OAAO,IAAI;KACZ,MACI;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAACC,IAAI,CAAC,MAAK;QAC9CC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,CAAC;MACF,IAAI,CAACC,CAAC;MACN,OAAO,KAAK;;EAEhB;;AAnBSb,SAAS,C;mBAATA,SAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATnB,SAAS,C;SAATA,SAAS;EAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;EAAAC,UAAA,EAHR;AAAM;SAGPtB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
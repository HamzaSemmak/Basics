{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Response } from 'src/app/Modules/Error/Response';\nimport { EMAIL_CODE_VEREFICATION } from 'src/app/Modules/Config/Config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/Auth/auth.service\";\nimport * as i3 from \"src/app/Services/Email/email.service\";\nimport * as i4 from \"src/app/Services/Carousel/owl.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../Components/error/error.component\";\nfunction EmailConfirmComponent_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"error\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"message\", ctx_r0.message);\n  }\n}\nlet EmailConfirmComponent = /*#__PURE__*/(() => {\n  class EmailConfirmComponent {\n    constructor(formBuilder, AuthService, MailService, Owl, Router, ActivateRoute) {\n      this.formBuilder = formBuilder;\n      this.AuthService = AuthService;\n      this.MailService = MailService;\n      this.Owl = Owl;\n      this.Router = Router;\n      this.ActivateRoute = ActivateRoute;\n      this.error = true;\n      this.Validators = this.formBuilder.group({\n        code: this.formBuilder.control('', [Validators.pattern(\"^[0-9]*$\")])\n      });\n    }\n    ngOnInit() {\n      if (this.AuthService.Check()) {\n        this.Router.navigate(['/']);\n      }\n      this.email = this.ActivateRoute.snapshot.params['email'];\n      this.AuthService.ForgotPassword(this.email).subscribe(response => {\n        if (Object.keys(response).length > 0) {\n          this.User = response;\n        } else {\n          this.Router.navigate(['/auth/login']);\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n    ngOnSubmit() {\n      if (this.Validators.value.code == \"\" || this.Validators.value.code == null) {\n        this.ThrowError(Response.RESPONSE_MSG_VAILDATION_EMPTY);\n      } else {\n        if (this.Validators.controls.code.errors) {\n          this.ThrowError(Response.RESPONSE_MSG_VAILDATION_NUMERIC);\n        } else {\n          if (this.Validators.value.code == EMAIL_CODE_VEREFICATION) {\n            localStorage.setItem(\"mail\", this.email);\n            this.Router.navigate(['auth/forget-password/password/reset']);\n          } else {\n            this.ThrowError(Response.RESPONSE_MSG_AUTH_CODE_RESPONSE_INCORRECT);\n          }\n        }\n      }\n    }\n    ngSendEmail() {\n      this.MailService.sendEmail(this.email, EMAIL_CODE_VEREFICATION.toString(), this.name);\n    }\n    ThrowError(Msg) {\n      this.message = Msg;\n    }\n  }\n  EmailConfirmComponent.ɵfac = function EmailConfirmComponent_Factory(t) {\n    return new (t || EmailConfirmComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EmailService), i0.ɵɵdirectiveInject(i4.OwlService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n  };\n  EmailConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmailConfirmComponent,\n    selectors: [[\"app-email-confirm\"]],\n    decls: 32,\n    vars: 2,\n    consts: [[1, \"authentification\", \"d-flex-center\"], [1, \"container\"], [1, \"authentification-content\", \"shadow\"], [1, \"auth-section\", \"d-none\"], [1, \"auth-section\", \"authentification-form\"], [1, \"app-logo\"], [1, \"icon-mail\"], [1, \"block-text\"], [1, \"auth-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"input-floating\"], [\"type\", \"text\", \"formControlName\", \"code\", \"required\", \"\"], [3, \"message\", 4, \"ngIf\"], [1, \"btn\"], [1, \"color-primery\", 3, \"click\"], [\"routerLink\", \"/auth/login\", 1, \"d-flex\"], [1, \"icon\", \"icon-arrow-left\", \"text-primary\"], [1, \"link\", \"text-primary\"], [3, \"message\"]],\n    template: function EmailConfirmComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"section\", 3);\n        i0.ɵɵelementStart(4, \"section\", 4)(5, \"div\", 5);\n        i0.ɵɵelement(6, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7)(8, \"h2\");\n        i0.ɵɵtext(9, \" Check your email \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \" We sent a code reset link to your email, \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function EmailConfirmComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.ngOnSubmit();\n        });\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementStart(15, \"span\");\n        i0.ɵɵtext(16, \" Verefication Code \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtemplate(19, EmailConfirmComponent_error_19_Template, 1, 1, \"error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 12);\n        i0.ɵɵtext(21, \" Confirm \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"p\");\n        i0.ɵɵtext(24, \" Didn't receive the email? \");\n        i0.ɵɵelementStart(25, \"span\", 13);\n        i0.ɵɵlistener(\"click\", function EmailConfirmComponent_Template_span_click_25_listener() {\n          return ctx.ngSendEmail();\n        });\n        i0.ɵɵtext(26, \" Click to resend \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"div\", 7)(28, \"div\", 14);\n        i0.ɵɵelement(29, \"i\", 15);\n        i0.ɵɵelementStart(30, \"a\", 16);\n        i0.ɵɵtext(31, \" Back to log in \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.Validators);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    dependencies: [i6.NgIf, i5.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i7.ErrorComponent]\n  });\n  return EmailConfirmComponent;\n})();\nexport { EmailConfirmComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
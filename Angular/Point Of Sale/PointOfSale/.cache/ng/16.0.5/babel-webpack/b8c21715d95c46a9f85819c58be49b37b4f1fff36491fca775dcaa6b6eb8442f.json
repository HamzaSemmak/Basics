{"ast":null,"code":"import emailjs from 'emailjs-com';\nimport { EMAIL_SERVICE_ID, EMAIL_TEMPLATE_ID, EMAIL_USER_ID } from 'src/app/Modules/Config/Config';\nimport * as i0 from \"@angular/core\";\nclass EmailService {\n  constructor() {}\n  sendEmail(To, Code, Name) {\n    const Params = {\n      to_email: To,\n      message: Code,\n      name: Name\n    };\n    emailjs.send(EMAIL_SERVICE_ID, EMAIL_TEMPLATE_ID, Params, EMAIL_USER_ID).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nEmailService.ɵfac = function EmailService_Factory(t) {\n  return new (t || EmailService)();\n};\nEmailService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmailService,\n  factory: EmailService.ɵfac,\n  providedIn: 'root'\n});\nexport { EmailService };","map":{"version":3,"names":["emailjs","EMAIL_SERVICE_ID","EMAIL_TEMPLATE_ID","EMAIL_USER_ID","EmailService","constructor","sendEmail","To","Code","Name","Params","to_email","message","name","send","then","response","console","log","error","factory","ɵfac","providedIn"],"sources":["E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Services\\Email\\email.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport emailjs, { EmailJSResponseStatus } from 'emailjs-com';\r\nimport { EMAIL_SERVICE_ID, EMAIL_TEMPLATE_ID, EMAIL_USER_ID } from 'src/app/Modules/Config/Config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailService {\r\n\r\n  constructor() { }\r\n\r\n  sendEmail(To: string, Code: string, Name: string) {\r\n    const Params = {\r\n      to_email: To,\r\n      message: Code,\r\n      name: Name\r\n    };\r\n  \r\n    emailjs.send(EMAIL_SERVICE_ID, EMAIL_TEMPLATE_ID, Params, EMAIL_USER_ID)\r\n      .then((response: EmailJSResponseStatus) => {\r\n        console.log(response);\r\n      }, (error) => {\r\n        console.log(error);\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AACA,OAAOA,OAAkC,MAAM,aAAa;AAC5D,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,aAAa,QAAQ,+BAA+B;;AAElG,MAGaC,YAAY;EAEvBC,YAAA,GAAgB;EAEhBC,SAASA,CAACC,EAAU,EAAEC,IAAY,EAAEC,IAAY;IAC9C,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAEJ,EAAE;MACZK,OAAO,EAAEJ,IAAI;MACbK,IAAI,EAAEJ;KACP;IAEDT,OAAO,CAACc,IAAI,CAACb,gBAAgB,EAAEC,iBAAiB,EAAEQ,MAAM,EAAEP,aAAa,CAAC,CACrEY,IAAI,CAAEC,QAA+B,IAAI;MACxCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EAAGG,KAAK,IAAI;MACXF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ;;AAjBWf,YAAY,C;mBAAZA,YAAY;AAAA;AAAZA,YAAY,C;SAAZA,YAAY;EAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;EAAAC,UAAA,EAFX;AAAM;SAEPlB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
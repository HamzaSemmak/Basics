{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/Services/Toast/toast.service\";\nclass AdminGuard {\n  constructor(service, router, Toast) {\n    this.service = service;\n    this.router = router;\n    this.Toast = Toast;\n  }\n  canActivate(route, state) {\n    if (sessionStorage.getItem('Role') == \"admin\") {\n      return true;\n    } else {\n      this.Toast.warning(\"You d'ont have acess to this page.\");\n      return false;\n    }\n  }\n}\nAdminGuard.ɵfac = function AdminGuard_Factory(t) {\n  return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastService));\n};\nAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminGuard,\n  factory: AdminGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AdminGuard };","map":{"version":3,"names":["AdminGuard","constructor","service","router","Toast","canActivate","route","state","sessionStorage","getItem","warning","i0","ɵɵinject","i1","AuthService","i2","Router","i3","ToastService","factory","ɵfac","providedIn"],"sources":["E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Guards\\Admin\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from 'src/app/Services/Auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ToastService } from 'src/app/Services/Toast/toast.service';\r\nimport { User } from 'src/app/Modules/Model/Users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AdminGuard implements CanActivate {\r\n  User: User;\r\n\r\n  constructor(private service: AuthService, private router: Router, private Toast: ToastService) {}\r\n\r\n  canActivate(\r\n  route: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if(sessionStorage.getItem('Role') == \"admin\") {\r\n      return true;\r\n    }\r\n    else {\r\n      this.Toast.warning(\"You d'ont have acess to this page.\")\r\n      return false;\r\n    }\r\n  }\r\n}"],"mappings":";;;;AAOA,MAIaA,UAAU;EAGrBC,YAAoBC,OAAoB,EAAUC,MAAc,EAAUC,KAAmB;IAAzE,KAAAF,OAAO,GAAPA,OAAO;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;EAAiB;EAEhGC,WAAWA,CACXC,KAA6B,EAC7BC,KAA0B;IACxB,IAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,OAAO,EAAE;MAC5C,OAAO,IAAI;KACZ,MACI;MACH,IAAI,CAACL,KAAK,CAACM,OAAO,CAAC,oCAAoC,CAAC;MACxD,OAAO,KAAK;;EAEhB;;AAfWV,UAAU,C;mBAAVA,UAAU,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,YAAA;AAAA;AAAVlB,UAAU,C;SAAVA,UAAU;EAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;EAAAC,UAAA,EAHT;AAAM;SAGPrB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
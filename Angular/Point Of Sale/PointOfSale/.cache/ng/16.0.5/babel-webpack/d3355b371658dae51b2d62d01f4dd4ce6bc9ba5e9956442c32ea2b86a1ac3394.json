{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ApiBasket } from 'src/app/Modules/Config/Api';\nimport { Keys } from 'src/app/Modules/Config/Config';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nlet BasketService = class BasketService {\n  constructor(HttpClient, roy) {\n    this.HttpClient = HttpClient;\n    this.roy = roy;\n    this.id = Math.floor(Math.random() * 100000);\n    var date = new Date();\n    this.dateOfToday = date.toISOString().split('T')[0];\n  }\n  getBasket() {\n    return this.HttpClient.get(`${ApiBasket}?userKey=${sessionStorage.getItem(Keys)}`, httpOptions);\n  }\n  setProductToBasket(Product) {\n    this.Basket = {\n      id: this.id,\n      product: Product,\n      date: this.dateOfToday,\n      userKey: sessionStorage.getItem(Keys)?.toString(),\n      quantite: 1,\n      price: Product.price\n    };\n    return this.HttpClient.post(ApiBasket, this.Basket, httpOptions);\n  }\n  clearBasket() {\n    this.getBasket().subscribe(Response => {\n      this.Baskets = Object.values(Response);\n      this.Baskets.forEach(element => {\n        this.HttpClient.delete(`${ApiBasket}/${element.id}`, httpOptions).subscribe(Response => {\n          this.ro;\n        });\n      });\n    });\n  }\n};\nBasketService = __decorate([Injectable({\n  providedIn: 'root'\n})], BasketService);\nexport { BasketService };","map":{"version":3,"names":["Injectable","HttpHeaders","ApiBasket","Keys","httpOptions","headers","BasketService","constructor","HttpClient","roy","id","Math","floor","random","date","Date","dateOfToday","toISOString","split","getBasket","get","sessionStorage","getItem","setProductToBasket","Product","Basket","product","userKey","toString","quantite","price","post","clearBasket","subscribe","Response","Baskets","Object","values","forEach","element","delete","ro","__decorate","providedIn"],"sources":["C:\\WorkSpace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Services\\Basket\\basket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiBasket } from 'src/app/Modules/Config/Api';\r\nimport { basket } from 'src/app/Modules/Model/basket';\r\nimport { Products } from 'src/app/Modules/Model/Products';\r\nimport { User } from 'src/app/Modules/Model/Users';\r\nimport { Keys } from 'src/app/Modules/Config/Config';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class BasketService {\r\n  Basket: basket;\r\n  Baskets: basket[];\r\n  dateOfToday: any;\r\n  id: number = Math.floor(Math.random() * 100000);\r\n\r\n  constructor(private HttpClient: HttpClient, private roy) { \r\n    var date = new Date();\r\n    this.dateOfToday = date.toISOString().split('T')[0];\r\n  }\r\n\r\n  getBasket(): Observable<basket[]> {\r\n    return this.HttpClient.get<basket[]>(`${ApiBasket}?userKey=${sessionStorage.getItem(Keys)}` , httpOptions);\r\n  }\r\n\r\n  setProductToBasket(Product: Products): Observable<basket> {\r\n    this.Basket = {\r\n      id: this.id,\r\n      product: Product,\r\n      date: this.dateOfToday,\r\n      userKey: sessionStorage.getItem(Keys)?.toString(),\r\n      quantite: 1,\r\n      price: Product.price\r\n    }\r\n    return this.HttpClient.post<basket>(ApiBasket, this.Basket, httpOptions);\r\n  }\r\n\r\n  clearBasket(): void {\r\n    this.getBasket().subscribe(\r\n      (Response) => {\r\n        this.Baskets = Object.values(Response);\r\n        this.Baskets.forEach(element => {\r\n          this.HttpClient.delete(`${ApiBasket}/${element.id}`, httpOptions).subscribe(\r\n            (Response) => {\r\n              this.ro\r\n            }\r\n          )\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAAwCC,WAAW,QAAQ,sBAAsB;AAEjF,SAASC,SAAS,QAAQ,4BAA4B;AAItD,SAASC,IAAI,QAAQ,+BAA+B;AAEpD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIJ,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAMD,IAAaK,aAAa,GAA1B,MAAaA,aAAa;EAMxBC,YAAoBC,UAAsB,EAAUC,GAAG;IAAnC,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,GAAG,GAAHA,GAAG;IAFvD,KAAAC,EAAE,GAAWC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,MAAM,CAAC;IAG7C,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAI,CAACC,WAAW,GAAGF,IAAI,CAACG,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrD;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAW,GAAGlB,SAAS,YAAYmB,cAAc,CAACC,OAAO,CAACnB,IAAI,CAAC,EAAE,EAAGC,WAAW,CAAC;EAC5G;EAEAmB,kBAAkBA,CAACC,OAAiB;IAClC,IAAI,CAACC,MAAM,GAAG;MACZf,EAAE,EAAE,IAAI,CAACA,EAAE;MACXgB,OAAO,EAAEF,OAAO;MAChBV,IAAI,EAAE,IAAI,CAACE,WAAW;MACtBW,OAAO,EAAEN,cAAc,CAACC,OAAO,CAACnB,IAAI,CAAC,EAAEyB,QAAQ,EAAE;MACjDC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAEN,OAAO,CAACM;KAChB;IACD,OAAO,IAAI,CAACtB,UAAU,CAACuB,IAAI,CAAS7B,SAAS,EAAE,IAAI,CAACuB,MAAM,EAAErB,WAAW,CAAC;EAC1E;EAEA4B,WAAWA,CAAA;IACT,IAAI,CAACb,SAAS,EAAE,CAACc,SAAS,CACvBC,QAAQ,IAAI;MACX,IAAI,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACH,QAAQ,CAAC;MACtC,IAAI,CAACC,OAAO,CAACG,OAAO,CAACC,OAAO,IAAG;QAC7B,IAAI,CAAC/B,UAAU,CAACgC,MAAM,CAAC,GAAGtC,SAAS,IAAIqC,OAAO,CAAC7B,EAAE,EAAE,EAAEN,WAAW,CAAC,CAAC6B,SAAS,CACxEC,QAAQ,IAAI;UACX,IAAI,CAACO,EAAE;QACT,CAAC,CACF;MACH,CAAC,CAAC;IACJ,CAAC,CACF;EACH;CAED;AA1CYnC,aAAa,GAAAoC,UAAA,EAJzB1C,UAAU,CAAC;EACV2C,UAAU,EAAE;CACb,CAAC,C,EAEWrC,aAAa,CA0CzB;SA1CYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}
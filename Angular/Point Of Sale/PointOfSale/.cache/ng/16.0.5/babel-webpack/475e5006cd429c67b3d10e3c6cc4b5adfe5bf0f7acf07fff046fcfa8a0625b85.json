{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { ApiCategorys, ApiProducts } from 'src/app/Modules/Config/Api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nclass CategoryService {\n  constructor(HttpClient) {\n    this.HttpClient = HttpClient;\n  }\n  getCategory() {\n    return this.HttpClient.get(ApiCategorys, httpOptions);\n  }\n  findByCategory(Category) {\n    return this.HttpClient.get(`${ApiProducts}?category`, httpOptions);\n  }\n}\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategoryService };","map":{"version":3,"names":["HttpHeaders","ApiCategorys","ApiProducts","httpOptions","headers","CategoryService","constructor","HttpClient","getCategory","get","findByCategory","Category","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Services\\Category\\category.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from 'src/app/Modules/Model/Category';\r\nimport { ApiCategorys, ApiProducts } from 'src/app/Modules/Config/Api';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n  })\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CategoryService {\r\n\r\n  constructor(private HttpClient: HttpClient) { }\r\n\r\n  getCategory(): Observable<Category[]> {\r\n    return this.HttpClient.get<Category[]>(ApiCategorys, httpOptions);\r\n  }\r\n\r\n  findByCategory(Category: Category): Observable<Category[]> {\r\n    return this.HttpClient.get<Category[]>(`${ApiProducts}?category`, httpOptions);\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,YAAY,EAAEC,WAAW,QAAQ,4BAA4B;;;AAEtE,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIJ,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAGD,MAIaK,eAAe;EAE1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAaR,YAAY,EAAEE,WAAW,CAAC;EACnE;EAEAO,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACJ,UAAU,CAACE,GAAG,CAAa,GAAGP,WAAW,WAAW,EAAEC,WAAW,CAAC;EAChF;;AAVWE,eAAe,C;mBAAfA,eAAe,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAP,UAAA;AAAA;AAAfF,eAAe,C;SAAfA,eAAe;EAAAU,OAAA,EAAfV,eAAe,CAAAW,IAAA;EAAAC,UAAA,EAHd;AAAM;SAGPZ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Response } from 'src/app/Modules/Error/Response';\nimport { EMAIL_CODE_VEREFICATION } from 'src/app/Modules/Config/Config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Services/Auth/auth.service\";\nimport * as i3 from \"src/app/Services/Email/email.service\";\nimport * as i4 from \"src/app/Services/Carousel/owl.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../Components/error/error.component\";\nfunction EmailConfirmComponent_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"error\", 17);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"message\", ctx_r0.message);\n  }\n}\nclass EmailConfirmComponent {\n  constructor(formBuilder, AuthService, MailService, Owl, Router, ActivateRoute) {\n    this.formBuilder = formBuilder;\n    this.AuthService = AuthService;\n    this.MailService = MailService;\n    this.Owl = Owl;\n    this.Router = Router;\n    this.ActivateRoute = ActivateRoute;\n    this.error = true;\n    this.Validators = this.formBuilder.group({\n      code: this.formBuilder.control('', [Validators.pattern(\"^[0-9]*$\")])\n    });\n  }\n  ngOnInit() {\n    if (this.AuthService.Check()) {\n      this.Router.navigate(['/']);\n    }\n    this.email = this.ActivateRoute.snapshot.params['email'];\n    this.AuthService.ForgotPassword(this.email).subscribe(response => {\n      if (Object.keys(response).length > 0) {\n        this.User = response;\n      } else {\n        this.Router.navigate(['/auth/login']);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  ngOnSubmit() {\n    if (this.Validators.value.code == \"\" || this.Validators.value.code == null) {\n      this.ThrowError(Response.RESPONSE_MSG_VAILDATION_EMPTY);\n    } else {\n      if (this.Validators.controls.code.errors) {\n        this.ThrowError(Response.RESPONSE_MSG_VAILDATION_NUMERIC);\n      } else {\n        if (this.Validators.value.code == EMAIL_CODE_VEREFICATION) {\n          localStorage.setItem(\"mail\", this.email);\n          this.Router.navigate(['auth/forget-password/password/reset']);\n        } else {\n          this.ThrowError(Response.RESPONSE_MSG_AUTH_CODE_RESPONSE_INCORRECT);\n        }\n      }\n    }\n  }\n  ngSendEmail() {\n    this.MailService.sendEmail(this.email, EMAIL_CODE_VEREFICATION.toString(), this.name);\n  }\n  ThrowError(Msg) {\n    this.message = Msg;\n  }\n}\nEmailConfirmComponent.ɵfac = function EmailConfirmComponent_Factory(t) {\n  return new (t || EmailConfirmComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.EmailService), i0.ɵɵdirectiveInject(i4.OwlService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n};\nEmailConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmailConfirmComponent,\n  selectors: [[\"app-email-confirm\"]],\n  decls: 32,\n  vars: 2,\n  consts: [[1, \"authentification\", \"d-flex-center\"], [1, \"container\"], [1, \"authentification-content\", \"shadow\"], [1, \"auth-section\", \"d-none\"], [1, \"auth-section\", \"authentification-form\"], [1, \"app-logo\"], [1, \"icon-mail\"], [1, \"block-text\"], [1, \"auth-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"input-floating\"], [\"type\", \"text\", \"formControlName\", \"code\", \"required\", \"\"], [3, \"message\", 4, \"ngIf\"], [1, \"btn\"], [1, \"color-primery\", 3, \"click\"], [\"routerLink\", \"/auth/login\", 1, \"d-flex\"], [1, \"icon\", \"icon-arrow-left\", \"text-primary\"], [1, \"link\", \"text-primary\"], [3, \"message\"]],\n  template: function EmailConfirmComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"section\", 3);\n      i0.ɵɵelementStart(4, \"section\", 4)(5, \"div\", 5);\n      i0.ɵɵelement(6, \"i\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 7)(8, \"h2\");\n      i0.ɵɵtext(9, \" Check your email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11, \" We sent a code reset link to your email, \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function EmailConfirmComponent_Template_form_ngSubmit_12_listener() {\n        return ctx.ngOnSubmit();\n      });\n      i0.ɵɵelementStart(13, \"div\", 9);\n      i0.ɵɵelement(14, \"input\", 10);\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \" Verefication Code \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"i\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵtemplate(19, EmailConfirmComponent_error_19_Template, 1, 1, \"error\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 12);\n      i0.ɵɵtext(21, \" Confirm \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 7)(23, \"p\");\n      i0.ɵɵtext(24, \" Didn't receive the email? \");\n      i0.ɵɵelementStart(25, \"span\", 13);\n      i0.ɵɵlistener(\"click\", function EmailConfirmComponent_Template_span_click_25_listener() {\n        return ctx.ngSendEmail();\n      });\n      i0.ɵɵtext(26, \" Click to resend \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 7)(28, \"div\", 14);\n      i0.ɵɵelement(29, \"i\", 15);\n      i0.ɵɵelementStart(30, \"a\", 16);\n      i0.ɵɵtext(31, \" Back to log in \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"formGroup\", ctx.Validators);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n    }\n  },\n  dependencies: [i6.NgIf, i5.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i7.ErrorComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EmailConfirmComponent };","map":{"version":3,"names":["Validators","Response","EMAIL_CODE_VEREFICATION","i0","ɵɵelement","ɵɵpropertyInterpolate","ctx_r0","message","EmailConfirmComponent","constructor","formBuilder","AuthService","MailService","Owl","Router","ActivateRoute","error","group","code","control","pattern","ngOnInit","Check","navigate","email","snapshot","params","ForgotPassword","subscribe","response","Object","keys","length","User","console","log","ngOnSubmit","value","ThrowError","RESPONSE_MSG_VAILDATION_EMPTY","controls","errors","RESPONSE_MSG_VAILDATION_NUMERIC","localStorage","setItem","RESPONSE_MSG_AUTH_CODE_RESPONSE_INCORRECT","ngSendEmail","sendEmail","toString","name","Msg","ɵɵdirectiveInject","i1","FormBuilder","i2","i3","EmailService","i4","OwlService","i5","ActivatedRoute","selectors","decls","vars","consts","template","EmailConfirmComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","EmailConfirmComponent_Template_form_ngSubmit_12_listener","ɵɵtemplate","EmailConfirmComponent_error_19_Template","EmailConfirmComponent_Template_span_click_25_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Views\\Auth\\password\\email-confirm\\email-confirm.component.ts","E:\\Workspace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Views\\Auth\\password\\email-confirm\\email-confirm.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/Services/Auth/auth.service';\r\nimport { FormBuilder, Validators } from '@angular/forms'\r\nimport { Router, ActivatedRoute  } from '@angular/router';\r\nimport { OwlService } from 'src/app/Services/Carousel/owl.service';\r\nimport { Response  } from 'src/app/Modules/Error/Response';\r\nimport { EmailService } from 'src/app/Services/Email/email.service';\r\nimport { EMAIL_CODE_VEREFICATION } from 'src/app/Modules/Config/Config';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from 'src/app/Modules/Model/Users';\r\n\r\n@Component({\r\n  selector: 'app-email-confirm',\r\n  templateUrl: './email-confirm.component.html',\r\n  styleUrls: ['./email-confirm.component.css']\r\n})\r\nexport class EmailConfirmComponent implements OnInit {\r\n  error: boolean = true;\r\n  message: string;\r\n  email: string;\r\n  name: string;\r\n  User: User;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private AuthService: AuthService,\r\n    private MailService: EmailService,\r\n    private Owl: OwlService,\r\n    private Router: Router,\r\n    private ActivateRoute: ActivatedRoute\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.AuthService.Check())\r\n    {\r\n      this.Router.navigate(['/']);\r\n    }\r\n\r\n    this.email = this.ActivateRoute.snapshot.params['email'];\r\n\r\n    this.AuthService.ForgotPassword(this.email).subscribe(\r\n      response => {\r\n        if(Object.keys(response).length > 0)\r\n        {\r\n          this.User = response;\r\n        } else {\r\n          this.Router.navigate(['/auth/login']);\r\n        }\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n       console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  Validators = this.formBuilder.group({\r\n    code: this.formBuilder.control('', [Validators.pattern(\"^[0-9]*$\")])\r\n  });\r\n\r\n  ngOnSubmit(): void {\r\n    if(this.Validators.value.code == \"\" || this.Validators.value.code == null)\r\n    {\r\n      this.ThrowError(Response.RESPONSE_MSG_VAILDATION_EMPTY);\r\n    }\r\n    else {\r\n      if(this.Validators.controls.code.errors) {\r\n        this.ThrowError(Response.RESPONSE_MSG_VAILDATION_NUMERIC);\r\n      }\r\n      else {\r\n        if(this.Validators.value.code == EMAIL_CODE_VEREFICATION)\r\n        {\r\n          localStorage.setItem(\"mail\", this.email);\r\n          this.Router.navigate(['auth/forget-password/password/reset']);\r\n        }\r\n        else {\r\n          this.ThrowError(Response.RESPONSE_MSG_AUTH_CODE_RESPONSE_INCORRECT);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ngSendEmail(): void {\r\n    this.MailService.sendEmail(this.email, EMAIL_CODE_VEREFICATION.toString(), this.name);\r\n  }\r\n\r\n  ThrowError(Msg: string): void {\r\n    this.message = Msg;\r\n  }\r\n}\r\n","<section class=\"authentification d-flex-center\">\r\n    <div class=\"container\">\r\n        <div class=\"authentification-content shadow\">\r\n            <section class=\"auth-section d-none\">\r\n            </section>\r\n            <section class=\"auth-section authentification-form\">\r\n                <div class=\"app-logo\">\r\n                    <i class=\"icon-mail\"></i>\r\n                </div>\r\n                <div class=\"block-text\">\r\n                    <h2> Check your email </h2>\r\n                    <p>\r\n                        We sent a code reset link to your email,\r\n                    </p>\r\n                </div>\r\n                <form class=\"auth-form\" [formGroup]=\"Validators\" (ngSubmit)=\"ngOnSubmit()\">\r\n                    <div class=\"input-floating\">\r\n                        <input type=\"text\" formControlName=\"code\" required/>\r\n                        <span> Verefication Code </span>\r\n                        <i class=\"icon-mail\"></i>\r\n                    </div>\r\n                    <p>\r\n                        <error *ngIf=\"error\" message=\"{{ message }}\"></error>\r\n                    </p>\r\n                    <button class=\"btn\">\r\n                        Confirm\r\n                    </button>\r\n                </form>\r\n                <div class=\"block-text\">\r\n                    <p> Didn't receive the email? <span (click)=\"ngSendEmail()\" class=\"color-primery\"> Click to resend </span> </p>\r\n                </div>\r\n                <div class=\"block-text\">\r\n                    <div class=\"d-flex\" routerLink=\"/auth/login\">\r\n                        <i class=\"icon icon-arrow-left text-primary\"></i>\r\n                        <a class=\"link text-primary\"> Back to log in </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</section>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
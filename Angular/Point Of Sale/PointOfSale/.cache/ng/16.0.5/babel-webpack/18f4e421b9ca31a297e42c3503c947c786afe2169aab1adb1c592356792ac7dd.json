{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/Auth/auth.service\";\nclass ConfirmComponent {\n  constructor(Router, ActivateRoute, Service) {\n    this.Router = Router;\n    this.ActivateRoute = ActivateRoute;\n    this.Service = Service;\n  }\n  ngOnInit() {\n    this.Key = this.ActivateRoute.snapshot.params['key'];\n    this.Service.FindByColumn(\"Key\", this.Key).subscribe(Response => {\n      if (Object.keys(Response).length > 0) {\n        return;\n      } else {\n        this.Router.navigate(['/auth/login']);\n      }\n    });\n  }\n  ngOnSubmit() {\n    this.Router.navigate(['/auth/login']);\n  }\n}\nConfirmComponent.ɵfac = function ConfirmComponent_Factory(t) {\n  return new (t || ConfirmComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nConfirmComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfirmComponent,\n  selectors: [[\"app-confirm\"]],\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"authentification\", \"d-flex-center\"], [1, \"container\"], [1, \"authentification-content\", \"shadow\"], [1, \"auth-section\", \"d-none\"], [1, \"auth-section\", \"authentification-form\"], [1, \"app-logo\"], [1, \"icon-check\", \"color-success\"], [1, \"block-text\"], [1, \"auth-form\"], [1, \"btn\", 3, \"click\"], [\"routerLink\", \"/auth/login\", 1, \"d-flex\"], [1, \"icon\", \"icon-arrow-left\", \"text-primary\"], [1, \"link\", \"text-primary\"]],\n  template: function ConfirmComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"section\", 3);\n      i0.ɵɵelementStart(4, \"section\", 4)(5, \"div\", 5);\n      i0.ɵɵelement(6, \"i\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 7)(8, \"h2\");\n      i0.ɵɵtext(9, \" Password Reset \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11, \" Your password has been successfuly rest, Click below to log in magically. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"form\", 8)(13, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function ConfirmComponent_Template_button_click_13_listener() {\n        return ctx.ngOnSubmit();\n      });\n      i0.ɵɵtext(14, \" Continue \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"div\", 10);\n      i0.ɵɵelement(17, \"i\", 11);\n      i0.ɵɵelementStart(18, \"a\", 12);\n      i0.ɵɵtext(19, \" Back to log in \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ConfirmComponent };","map":{"version":3,"names":["ConfirmComponent","constructor","Router","ActivateRoute","Service","ngOnInit","Key","snapshot","params","FindByColumn","subscribe","Response","Object","keys","length","navigate","ngOnSubmit","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AuthService","selectors","decls","vars","consts","template","ConfirmComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","ConfirmComponent_Template_button_click_13_listener"],"sources":["C:\\WorkSpace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Components\\Auth\\password\\confirm\\confirm.component.ts","C:\\WorkSpace\\Basics\\Angular\\Point Of Sale\\PointOfSale\\src\\app\\Components\\Auth\\password\\confirm\\confirm.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute  } from '@angular/router';\r\nimport { AuthService } from 'src/app/Services/Auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n  Key: string;\r\n\r\n  constructor(\r\n    private Router: Router,\r\n    private ActivateRoute: ActivatedRoute,\r\n    private Service: AuthService\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n    this.Key = this.ActivateRoute.snapshot.params['key'];\r\n    this.Service.FindByColumn(\"Key\", this.Key).subscribe(\r\n      Response => {\r\n        if(Object.keys(Response).length > 0)\r\n        {\r\n          return;\r\n        }\r\n        else {\r\n          this.Router.navigate(['/auth/login']);\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnSubmit(): void {\r\n    this.Router.navigate(['/auth/login']);\r\n  }\r\n}\r\n","<section class=\"authentification d-flex-center\">\r\n    <div class=\"container\">\r\n        <div class=\"authentification-content shadow\">\r\n            <section class=\"auth-section d-none\">\r\n            </section>\r\n            <section class=\"auth-section authentification-form\">\r\n                <div class=\"app-logo\">\r\n                    <i class=\"icon-check color-success\"></i>\r\n                </div>\r\n                <div class=\"block-text\">\r\n                    <h2> Password Reset </h2>\r\n                    <p>\r\n                        Your password has been successfuly rest,\r\n                        Click below to log in magically.\r\n                    </p>\r\n                </div>\r\n                <form class=\"auth-form\">\r\n                    <button class=\"btn\" (click)=\"ngOnSubmit()\">\r\n                        Continue\r\n                    </button>\r\n                </form>\r\n                <div class=\"block-text\">\r\n                    <div class=\"d-flex\" routerLink=\"/auth/login\">\r\n                        <i class=\"icon icon-arrow-left text-primary\"></i>\r\n                        <a class=\"link text-primary\"> Back to log in </a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</section>"],"mappings":";;;AAIA,MAKaA,gBAAgB;EAG3BC,YACUC,MAAc,EACdC,aAA6B,EAC7BC,OAAoB;IAFpB,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,OAAO,GAAPA,OAAO;EACZ;EAELC,QAAQA,CAAA;IACN,IAAI,CAACC,GAAG,GAAG,IAAI,CAACH,aAAa,CAACI,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;IACpD,IAAI,CAACJ,OAAO,CAACK,YAAY,CAAC,KAAK,EAAE,IAAI,CAACH,GAAG,CAAC,CAACI,SAAS,CAClDC,QAAQ,IAAG;MACT,IAAGC,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC,CAACG,MAAM,GAAG,CAAC,EACnC;QACE;OACD,MACI;QACH,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;IAEzC,CAAC,CACF;EACH;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACd,MAAM,CAACa,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EACvC;;AA1BWf,gBAAgB,C;mBAAhBA,gBAAgB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAjB,MAAA,GAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAhBtB,gBAAgB,C;QAAhBA,gBAAgB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT7BZ,EAAA,CAAAc,cAAA,iBAAgD;MAGpCd,EAAA,CAAAe,SAAA,iBACU;MACVf,EAAA,CAAAc,cAAA,iBAAoD;MAE5Cd,EAAA,CAAAe,SAAA,WAAwC;MAC5Cf,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAc,cAAA,aAAwB;MACfd,EAAA,CAAAiB,MAAA,uBAAe;MAAAjB,EAAA,CAAAgB,YAAA,EAAK;MACzBhB,EAAA,CAAAc,cAAA,SAAG;MACCd,EAAA,CAAAiB,MAAA,mFAEJ;MAAAjB,EAAA,CAAAgB,YAAA,EAAI;MAERhB,EAAA,CAAAc,cAAA,eAAwB;MACAd,EAAA,CAAAkB,UAAA,mBAAAC,mDAAA;QAAA,OAASN,GAAA,CAAAd,UAAA,EAAY;MAAA,EAAC;MACtCC,EAAA,CAAAiB,MAAA,kBACJ;MAAAjB,EAAA,CAAAgB,YAAA,EAAS;MAEbhB,EAAA,CAAAc,cAAA,cAAwB;MAEhBd,EAAA,CAAAe,SAAA,aAAiD;MACjDf,EAAA,CAAAc,cAAA,aAA6B;MAACd,EAAA,CAAAiB,MAAA,wBAAe;MAAAjB,EAAA,CAAAgB,YAAA,EAAI;;;;;SDf5DjC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}